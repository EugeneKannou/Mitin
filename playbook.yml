---
- name: deploy
  hosts: servers
  remote_user: root
  become: yes
  vars:
    users: 
      - { name: 'Webdeveloper', password: 'S52we9V6QTp7'}
      - { name: 'Devopsengineer', password: 'dHy6sKGHsj2T'}
      - { name: 'Projectmanager', password: 'oP92ugMSaCbe'}
    publickey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCovvBkeLIDsvbCyQsMWtPWVgGVKcwAqRONiBJ9JyrVCQbruyMPutatjSlhNpYXKLlP4BXHrGrmAVqeI155li1fkNP5Il7viHRE0HvA3M2extNGDDCiX5f5OlIeT9p/D9OHvWWozLjN2NAGEW24feuzKPZb6Kyv2W3yHbiIU3wt8v50VAIA2+PAfElHp1jplGHQLmYuT6Cc26Pn3WYXZ8t8oU77T6Ki5qDG5V5DVZI3Ym5gqqXXtJYzET9piJvO6qiIcgljtOGlUH9H9QNLEbuF+RKIhL3pFAnF8S79Km2A3j9KFZw6prDR6/VeMffMrNSZLeYztzDGEzm35uz5q6j+qrKsuA4SfpbSOcBwaariOoKpb6JfogoJRgCqxR5O1AKR/Oqhdk6JOlKJk+tIXFmOczH7da/W93f8KGGve4iHRvz/e3vYA7exXIVkD8mc/VmIoT1kqh/uNGia/adnyCgvMpL8JXLJgY2DThpjHslUr0RTEpQJTLTka3D43YV37kM='

  tasks: 
  - name: update apt
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400

  - name: install curl
    apt:
      name: curl
      update_cache: true
      state: present

  - name: allow ufw ports
    ufw:
      rule: allow
      port: 80,8080,1834,443
      proto: tcp

  - name: allow ufw ssh
    ufw:
      rule: allow
      name: OpenSSH

  - name: enable ufw 
    ufw:
      state: enabled

  - name: change ssh port
    lineinfile:
      dest: "/etc/ssh/sshd_config"
      regexp: "^Port"
      line: "Port 1834"
      
  - name: create users
    user:
      name: "{{ item.name }}"
      password: "{{ item.password }}"
      state: present
    loop: 
      "{{ users }}"

  - name: copy public key
    authorized_key:
      key: "{{ publickey }}"
      user: "{{ item.name }}"
    loop:
      "{{ users }}"

  - name: Install prerequisites for Docker repository
    apt:
      name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common']
      update_cache: yes

  - name: Add Docker gpg key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      
  - name: Add Docker apt repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable

  - name: Install prerequisites for docker-compose
    apt:
      name: ['python3-pip', 'python3-setuptools', 'virtualenv']

  - name: Install python modules
    shell: "pip3 install {{ item }}"
    loop:
      - docker-compose
      - docker
      - requests


  - name: restart sshd
    service:
      name: sshd
      state: restarted

  - name: restart ufw
    service:
      name: ufw
      state: restarted

  - name: install docker
    apt:
      name: "{{ item }}"
      update_cache: true
      state: present
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: install docker-compose
    script: ./docker-compose.sh

  - name: make /skillcloud-nginx dir
    file: 
      path: /skillcloud-nginx
      state: directory

  - name: copy files to host
    copy: 
      src: ./deploy-files/
      dest: /skillcloud-nginx/


  - name: build site image
    shell: docker build -t site:site /skillcloud-nginx/site/

  - name: build balancer image
    shell: docker build -t balance:balance /skillcloud-nginx/balance/

  - name: run docker-compose
    docker_compose: 
      project_src: /skillcloud-nginx
    vars:
      ansible_python_interpreter: /bin/python3

